plugins {
    id 'java'
    id 'application'
    id 'com.bmuschko.docker-java-application' version '4.10.0'
    id 'org.springframework.boot' version '2.1.9.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

repositories {
    jcenter()
    maven {
        url 'http://packages.confluent.io/maven/'
    }
    mavenCentral()
}

dependencies {
    compile ('org.springframework.boot:spring-boot-starter:2.1.9.RELEASE') {
        exclude module : 'spring-boot-starter-logging'
    }
    implementation 'org.springframework.kafka:spring-kafka'

    compile 'org.apache.kafka:kafka-streams:2.0.1'
    compile 'org.slf4j:slf4j-log4j12:1.7.25'
    compile 'ch.hsr:geohash:1.3.0'

    compile 'com.google.guava:guava:28.1-jre'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'

    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'

    testImplementation ('org.springframework.boot:spring-boot-starter-test') {
        exclude module : 'spring-boot-starter-logging'
    }
    testImplementation 'org.springframework.kafka:spring-kafka-test'
}

mainClassName = 'kafka.streams.scaling.App'

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'kafka.streams.scaling.App'
    }
    baseName = project.name + '-all'
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

docker {
    javaApplication {
        baseImage = 'openjdk:11-jdk'
        tag = 'uladzislautarasevich/' + project.name.toLowerCase() + ':latest'
        jvmArgs = [ "-Dcom.sun.management.jmxremote.port=5555",
                    "-Dcom.sun.management.jmxremote.authenticate=false",
                    "-Dcom.sun.management.jmxremote.ssl=false"]
    }
}
